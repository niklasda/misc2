using System.Collections.Generic;
using Gallio.Framework;
using MbUnit.Framework;
using MbUnitDemo.Tests.Extensions;

namespace MbUnitDemo.Tests.Factories
{
    [TestFixture]
    [AuthoredByNiklas]
    [Category(Categories.Factories)]
    public class StaticTestFactoryDemo
    {
        // must be static, appears in Icarus

        [StaticTestFactory]
        public static IEnumerable<Test> CreateSillyStaticTests()
        {
            for (int i = 0; i < 5; i++)
            {
                yield return new TestCase("SampleStaticCase_" + i, () => Assert.AreEqual("eee", "eee"))
                     {
                         Description="a sample static test case"
                     };
            }
        }


        [StaticTestFactory]
        public static IEnumerable<Test> CreateSimpleStaticTestSuite()
        {
            yield return new TestSuite("SimpleStaticTestSuite")
                 {
                     Description = "Generated By Static TestFactory",
                     SetUp = () => TestLog.WriteLine("Setup"),
                     TearDown = () => TestLog.WriteLine("TearDown"),
                     SuiteSetUp = () => TestLog.WriteLine("SuiteSetup"),
                     SuiteTearDown = () => TestLog.WriteLine("SuiteTearDown"),
                     Children =
                         {
                             new TestCase("SuiteCase1", ()=> Assert.AreEqual("asd", "asd")),
                             new TestCase("SuiteCase2", ()=> Assert.AreEqual("asd", "asd"))
                         }
                 };
        }
    }
}