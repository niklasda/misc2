<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PasswordManager</name>
    </assembly>
    <members>
        <member name="T:PasswordManager.Encrypter">
            <summary>
            Handles Ecryption and decryption of textstrings
            </summary>
        </member>
        <member name="F:PasswordManager.Encrypter.sCryptoName">
            <summary>
            The name of the crypto algorithm, displayed in the status bar
            </summary>
        </member>
        <member name="M:PasswordManager.Encrypter.Encrypt(System.String)">
            <summary>
            Encrypt a string using 3DES and Base-64
            </summary>
            <param name="sOriginal">Plain text to be encrypted</param>
            <returns></returns>
        </member>
        <member name="M:PasswordManager.Encrypter.Decrypt(System.String)">
            <summary>
            Decrypt and decode an 3DES encrypted and Base-64 encoded string 
            </summary>
            <param name="sEncrypted">3DES encoded text that has been Base-64 encoded</param>
            <returns>Plain text</returns>
        </member>
        <member name="T:PasswordManager.FormAbout">
            <summary>
            Summary description for frmAbout.
            </summary>
        </member>
        <member name="M:PasswordManager.FormAbout.#ctor">
            <summary>
            standard empty constructor
            </summary>
        </member>
        <member name="M:PasswordManager.FormAbout.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PasswordManager.FormAbout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:PasswordManager.FormPasswordManager">
            <summary>
            Summary description for PasswordManager.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManager.#ctor(System.String)">
            <summary>
            standard empty constructor
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManager.savePasswords">
            <summary>
            save the passwords
            </summary>
        </member>
        <member name="T:PasswordManager.FormPasswordManagerTop">
            <summary>
            Summary description for PasswordManagerTop.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManagerTop.#ctor">
            <summary>
            standard empty constructor
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManagerTop.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManagerTop.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordManagerTop.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:PasswordManager.FormPasswordProperties">
            <summary>
            Summary description for frmAbout.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordProperties.#ctor">
            <summary>
            standard empty constructor
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordProperties.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordProperties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PasswordManager.FormPasswordProperties.SetPassword(PasswordManager.Password)">
            <summary>
            Show a password in the GUI
            </summary>
            <param name="oNewPassword">The password to show</param>
        </member>
        <member name="M:PasswordManager.FormPasswordProperties.GetPassword">
            <summary>
            return the edited password
            </summary>
            <returns></returns>
        </member>
        <member name="P:PasswordManager.FormPasswordProperties.arCategories">
            <summary>
            categories to choose from
            </summary>
        </member>
        <member name="T:PasswordManager.MruMenuItem">
            <summary>
            Summary description for MruMenuItem.
            </summary>
        </member>
        <member name="M:PasswordManager.MruMenuItem.#ctor(System.String)">
            <summary>
            Create a new MRU MenuItem with specified name
            </summary>
            <param name="sMenuItemName">Name of MenuItem</param>
        </member>
        <member name="M:PasswordManager.MruMenuItem.#ctor">
            <summary>
            Create a new MRU MenuItem.
            Also use by menu merge
            </summary>
        </member>
        <member name="M:PasswordManager.MruMenuItem.Initialize(System.String[])">
            <summary>
            Initialize the MRU submenu with the specified filenames
            </summary>
            <param name="files">Files to add to list</param>
        </member>
        <member name="M:PasswordManager.MruMenuItem.FileOpened(System.String)">
            <summary>
            Adds a file to the MRU list.
            Replace the first one if list is full
            </summary>
            <param name="file">file to add to list</param>
        </member>
        <member name="P:PasswordManager.MruMenuItem.MRUFiles">
            <summary>
            Return the MRU list
            </summary>
        </member>
        <member name="E:PasswordManager.MruMenuItem.MruClicked">
            <summary>
            Fired when a mru menuitem is clicked
            </summary>
        </member>
        <member name="T:PasswordManager.Password">
            <summary>
            A password
            </summary>
        </member>
        <member name="M:PasswordManager.Password.#ctor(System.Int32)">
            <summary>
            Constructor for a empty password
            </summary>
            <param name="p_iPasswordId"></param>
        </member>
        <member name="M:PasswordManager.Password.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor for populated passwords
            </summary>
            <param name="p_iPasswordId"></param>
            <param name="p_sTitle"></param>
            <param name="p_sDescription"></param>
            <param name="p_sUsername"></param>
            <param name="p_sPassword"></param>
            <param name="p_sUrl"></param>
            <param name="p_sCategory"></param>
        </member>
        <member name="P:PasswordManager.Password.iPasswordId">
            <summary>
            password id
            </summary>
        </member>
        <member name="P:PasswordManager.Password.sUsername">
            <summary>
            username to use with password
            </summary>
        </member>
        <member name="P:PasswordManager.Password.sPassword">
            <summary>
            password to use with username
            </summary>
        </member>
        <member name="P:PasswordManager.Password.sTitle">
            <summary>
            title used to present the Password
            </summary>
        </member>
        <member name="P:PasswordManager.Password.sDescription">
            <summary>
            description for the password
            </summary>
        </member>
        <member name="P:PasswordManager.Password.sUrl">
            <summary>
            url probably leading to the site where the password can be used
            </summary>
        </member>
        <member name="P:PasswordManager.Password.sCategory">
            <summary>
            category to sort the password under
            </summary>
        </member>
        <member name="T:PasswordManager.PasswordDictionary">
            <summary>
            Dictionary to store Password objects in
            </summary>
        </member>
        <member name="M:PasswordManager.PasswordDictionary.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PasswordManager.PasswordDictionary.Add(PasswordManager.Password)">
            <summary>
            Add a password to this dictionary
            </summary>
            <param name="oPassword"></param>
        </member>
        <member name="M:PasswordManager.PasswordDictionary.Remove(System.Int32)">
            <summary>
            Remove a password from this dictionary
            </summary>
            <param name="iPasswordId"></param>
        </member>
        <member name="M:PasswordManager.PasswordDictionary.Contains(System.Int32)">
            <summary>
            Check if a password exists in this dictionary
            </summary>
            <param name="iPasswordId"></param>
            <returns></returns>
        </member>
        <member name="P:PasswordManager.PasswordDictionary.Item(System.Int32)">
            <summary>
            Return the password for this ID
            </summary>
        </member>
        <member name="T:PasswordManager.Remote">
            <summary>
            Handles URLs
            </summary>
        </member>
        <member name="M:PasswordManager.Remote.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PasswordManager.Remote.gotoUrl(System.String)">
            <summary>
            Validate an Url and open it in a browser
            </summary>
            <param name="sUrl">the url to goto</param>
        </member>
        <member name="T:PasswordManager.Settings">
            <summary>
            Load and save settings
            </summary>
        </member>
        <member name="M:PasswordManager.Settings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:PasswordManager.Settings.sApplicationName">
            <summary>
            Name of application including version number. Used in titlebars.
            </summary>
        </member>
        <member name="F:PasswordManager.Settings.sMruDataFileName">
            <summary>
            Name of file to serialize MRU to
            </summary>
        </member>
        <member name="F:PasswordManager.Settings.bShowPasswords">
            <summary>
            Should passwords be shown in GUI or ******
            </summary>
        </member>
        <member name="M:PasswordManager.Settings.isFileWritable(System.String)">
            <summary>
            Check if a file exists and is writable
            </summary>
            <param name="sFilename">Name of file to check</param>
            <returns>True if file exists and is writable</returns>
        </member>
        <member name="M:PasswordManager.Settings.WritePasswords(PasswordManager.PasswordDictionary,System.String)">
            <summary>
            write the password dictionary to file
            </summary>
            <param name="dicPasswords">Dictionary of Passwords to save</param>
            <param name="sSettingsFileName">Filename to write to</param>
        </member>
        <member name="M:PasswordManager.Settings.ReadPasswords(System.String)">
            <summary>
            Read passwords from file
            </summary>
            <param name="sSettingsFileName">Filename to read from</param>
            <returns>Dictionary containing passwords</returns>
        </member>
    </members>
</doc>
